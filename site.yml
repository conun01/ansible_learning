---

- hosts: all
  become: true
  tasks:

  - name: update caches debians
    tags: always
    apt:
            #      only_upgrade: yes
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Debian"

    
  - name: update caches Ubuntu
    tags: always
    apt:
            #upgrade: dist
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Ubuntu" 

- hosts: all
  tasks:

  - name: add ssh key to testansible user
    tags: always 
    authorized_key:
      user: testansible 
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFv6gLNe5Lp9sHovVxsh5WWxXspIf6SbJRjX/Bwry1KK for ansible"

- hosts: workstation
  become: true
  tasks:

  - name: install unzip
    package:
      name: unzip

  - name: install terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.14.9/terraform_0.14.9_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root



- hosts: web_servers
  become: true
  tags: nginx
  tasks:
    
  - name: install nginx and php for Ubuntu servers
    apt:
      state: latest
      name:
      - nginx
      - tmux
    when: ansible_distribution == "Ubuntu"

  - name: transfer file to Ubuntu Server
    tags: nginx
    copy:
      src: default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

  - name: start nginx(ubuntu)
    tags: nginx
    service:
      name: nginx
      state: started
    when: ansible_distribution == "Ubuntu"

  - name: change config file nginx(ubuntu)
    tags: nginx
    lineinfile: 
      path: /etc/nginx/sites-enabled/default
      regexp: 'listen\s\d{4}\s\w+'
      line: "        listen 5555 default_server;"
    when: ansible_distribution == "Ubuntu"
    register: nginx

  - name: change config file nginx(ubuntu)2
    tags: nginx
    lineinfile: 
      path: /etc/nginx/sites-enabled/default
      regexp: 'listen\s[\[\:\]]+\d{4}\s\w+'
      line: "        listen [::]:5555 default_server;"
    when: ansible_distribution == "Ubuntu"
    register: nginx

  - name: restart nginx(ubuntu)
    tags: nginx
    service: 
      name: nginx
      state: restarted
    when: nginx.changed

    
- hosts: db_servers
  become: true
  tags: postgresql
  tasks:

  - name: install postgresql on Debian server
    apt:
      state: latest
      name:
      - postgresql
    when: ansible_distribution == "Debian"
